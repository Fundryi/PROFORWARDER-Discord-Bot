require('dotenv').config();

module.exports = {
  botToken: process.env.BOT_TOKEN,
  debugMode: false, // Set to true to enable debug logging and test commands
  
  // Enhanced Format Conversion Settings (streamlined system)
  useSliceFormatConverter: true,  // Enhanced slice-based conversion (PRIMARY METHOD - recommended)
  useAIFormatConverter: false,    // AI-powered conversion (FALLBACK ONLY - for future use)
  
  // Bot message forwarding control
  forwardBotMessages: true, // Set to false to ignore messages from other bots
  
  // Forward configurations - Automatically populated by bot via /proforward commands
  // Do not manually edit this array - use Discord commands instead
  forwardConfigs: [],
  
  // Auto-publish channels configuration
  // Channels configured for automatic publishing of announcements
  // Automatically populated by bot via /proforward auto-publish commands
  autoPublishChannels: {},
  
  // Discord integration settings
  discord: {
    // Cached invite links for source headers (automatically managed)
    // Do not manually edit - the bot manages these automatically
    cachedInvites: {
      // Example: "123456789": { invite: "https://discord.gg/abc123", isVanity: false, expiresAt: null }
    }
  },
  
  // Telegram integration (optional)
  telegram: {
    enabled: false, // Set to true to enable Telegram integration
    botToken: process.env.TELEGRAM_BOT_TOKEN,
    apiUrl: process.env.TELEGRAM_API_URL || 'https://api.telegram.org',
    hideSourceHeader: false, // Set to true to disable Discord source headers in Telegram messages
    smartLinkPreviews: true // Smart link preview behavior: allow previews when Discord has images, disable for text-only messages
  },
  
  // AI Integration for translation and content optimization
  ai: {
    enabled: false, // Set to true to enable AI features
    
    // Provider configurations (API keys from .env file)
    providers: {
      // Google Gemini (ðŸŸ¡ FREEMIUM - Free tier available)
      // Best for: Advanced AI format conversion and translations
      // Cost: Free tier available, pay per token after limits
      gemini: {
        apiKey: process.env.GEMINI_API_KEY,
        model: 'gemini-2.0-flash-exp',
        maxTokens: 2048,
        temperature: 0 // Conservative for formatting precision
      },
      
      // OpenAI GPT-4 (ðŸ’° PAID SERVICE - Requires payment after free trial)
      // Best for: High-quality translations, content optimization
      // Cost: Pay per token (approximately $0.03/1K tokens for GPT-4)
      openai: {
        apiKey: process.env.OPENAI_API_KEY,
        model: 'gpt-4', // or 'gpt-3.5-turbo' for cheaper option
        maxTokens: 2000,
        temperature: 0.3 // Lower = more conservative, Higher = more creative
      },
      
      // DeepL (ðŸŸ¡ FREEMIUM - Free tier: 500,000 chars/month)
      // Best for: Professional-grade translation quality
      // Cost: Free tier available, then $6.99/month for Pro
      deepl: {
        apiKey: process.env.DEEPL_API_KEY,
        freeApi: true // Set to false if using DeepL Pro API
      }
    },
    
    // Translation settings
    translation: {
      enabled: true, // Enable translation features
      defaultProvider: 'gemini', // Recommended: 'gemini' (free tier) or 'deepl'
      cacheTranslations: true, // Cache translations to reduce API costs
      maxCacheAge: 24 * 60 * 60 * 1000, // 24 hours in milliseconds
      fallbackProvider: 'deepl' // Fallback if primary provider fails
    },
    
    // Content optimization settings
    optimization: {
      defaultLevel: 'enhanced', // 'basic', 'enhanced', 'custom'
      preserveEmojis: true,
      preserveMentions: true,
      preserveLinks: true,
      maxOptimizationLength: 2000
    }
  }
};